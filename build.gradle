plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.juanrobledo'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // === DEPENDENCIAS PRINCIPALES DE SPRING BOOT ===
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA (Hibernate) para acceso a base de datos
    implementation 'org.springframework.boot:spring-boot-starter-security' // Spring Security para autenticación y autorización
    implementation 'org.springframework.boot:spring-boot-starter-web'   // Web (REST API, controllers, etc.)
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
// implementation 'org.springframework.boot:spring-boot-starter-validation' // Validación con anotaciones (@Valid)

// === BASE DE DATOS ===
    runtimeOnly 'com.mysql:mysql-connector-j' // Conector para base de datos MySQL
// runtimeOnly 'com.h2database:h2' // Base de datos en memoria para testing (opcional)

// === LOMBOK Y DESARROLLO ===
    compileOnly 'org.projectlombok:lombok' // Lombok solo en compilación
    annotationProcessor 'org.projectlombok:lombok' // Procesador de anotaciones de Lombok
    developmentOnly 'org.springframework.boot:spring-boot-devtools' // DevTools para recarga automática en desarrollo

// === MAPSTRUCT PARA MAPPERS ===
    implementation 'org.mapstruct:mapstruct:1.6.3' // MapStruct para generar mapeadores automáticos
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3' // Procesador de anotaciones de MapStruct

// === JWT (JSON Web Tokens) PARA AUTENTICACIÓN ===
    implementation("io.jsonwebtoken:jjwt-api:0.11.5") // API principal de JWT
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5") // Implementación de JWT
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5") // Soporte para serialización con Jackson

// === TESTING ===
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // Starter de test de Spring
    testImplementation 'org.springframework.security:spring-security-test' // Testing de funcionalidades de seguridad
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // Lanzador de tests de JUnit Platform

// === MERCADO PAGO ===
    implementation 'com.mercadopago:sdk-java:2.2.0' // SDK oficial de Mercado Pago

// === WEB SOCKETS ===
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
}

tasks.named('test') {
    useJUnitPlatform()
}
